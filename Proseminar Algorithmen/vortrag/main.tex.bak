\documentclass[ucs,9pt]{beamer}
\setbeamertemplate{navigation symbols}{}
% remove this line and the "ucs" option to the documentclass when your editor is not utf8-capable
\usepackage[utf8x]{inputenc}    % to make utf-8 input possible
\usepackage[english]{babel}     % hyphenation etc., alternatively use 'german' as parameter
%\usepackage{listings}

\include{fu-beamer-template}  % THIS is the line that includes the FU template!

\usepackage{arev,t1enc} % looks nicer than the standard sans-serif font
% if you experience problems, comment out the line above and change
% the documentclass option "9pt" to "10pt"

% image to be shown on the title page (without file extension, should be pdf or png)
\titleimage{mi-bildbalken}
\title[Para Sort] % (optional, use only with long paper titles)
{Parallele Sortierung}

%\subtitle
%{Include Only If Paper Has a Subtitle}

\author[] % (optional, use only with lots of authors)
{Björn Rathjen \and Patrick Winterstein}
% - Give the names in the same order as the appear in the paper.

\institute[FU Berlin] % (optional, but mostly needed)
{Freie Universität Berlin}

\date[ProSem Algo]
{Proseminar Algorithmen, SS14}

%\subject{Theoretical Computer Science}
% This is only inserted into the PDF information catalog. Can be left
% out.

% you can redefine the text shown in the footline. use a combination of
% \insertshortauthor, \insertshortinstitute, \insertshorttitle, \insertshortdate, ...
\renewcommand{\footlinetext}{\insertshortinstitute, \insertshorttitle, \insertshortdate}

\AtBeginSection[]
{
	\begin{frame}<beamer>
		\tableofcontents[currentsection,hideothersubsubsections,hideothersubsections]
	\end{frame}
}

\begin{document}

%Titelblatt
\begin{frame}[plain]
  \titlepage
\end{frame}
 
%Inhaltsverzeichnis
\begin{frame}{Inhalt}
  \tableofcontents[hideallsubsubsections,allowframebreaks] %currentsection,hideallsubsections,hideallsubsubsections
  % You might wish to add the option [pausesections]
\end{frame}

% Motivation
\section{Motivation}
    
\begin{frame}{Motivatior : Allgemein}
    ist Basis für :
    \begin{itemize}
        \item Suche
        \item (Sortierung)
        \begin{itemize}
            \item Listen
            \item Wörterbücher
            \item ... 
        \end{itemize}
        \item Ist dies auch in Hardware möglich ?
    \end{itemize}
\end{frame}

\section{Grundlage des Sortierens}
\subsection{Komparator}
\begin{frame}{Aufbau}
    \begin{minipage}[c]{5cm}
        \begin{itemize}
            \item 2 Eingänge
            \item vergleichender Baustein
            \item 2 Ausgänge
        \end{itemize}
	\begin{minipage}[c]{7cm}

\end{minipage}        
% TODO Bild Komparator
    \end{minipage}
    
\end{frame}

%Pseudocode
\begin{frame}[fragile]{Vergleichender Baustein (ii)}
\begin{lstlisting}[laguage={inform},tabsize=4]
    void comp(chan in1, in2, out1 out2){
        a = <- in1;
        b = <- in2;
        
        if (a < b){
            out1 <- a;
            out2 <- b;
            return void;
        }
        out1 <- b;
        out2	 <- a;
        return void;
    }
\end{lstlisting}
\end{frame}

\section{Sortiernetzwerk}
\subsection{Aufbau}

\begin{frame}
    \begin{itemize}
        \item mehrere Eingabeleitungen
        \item Vergleichende Schritte müssen dazwischen laufen
        \item mehrere Ausgabeleitungen sortierte Ausgabe
    \end{itemize}
\end{frame}

\subsubsection*{nativer Ansatz}
\begin{frame}{nativ : Aufgabe}
\begin{semiverbatim}
    \uncover<1-> {Aufgabe
        \begin{itemize}
            \item Resultat soll sortierte Eingabe sein
            \end{itemize}}
    \uncover<2-> {\item grundlegendes Prinzip
        \begin{itemize}
            \item intuitiver Einsatz von Vergleichen
            \item Schrittweises sortieren
        \end{itemize}}
\end{semiverbatim}
\end{frame}

\begin{frame}{nativ : grundlegendes Prinzip}
    Bild \\
    siehe 2 
\end{frame}

\begin{frame}{Demonstration}
    Bild kleiner Zahlenfolge 4-8-16\\
    Beispiel
\end{frame}

\subsection{Korrektheit}
\begin{frame}{0,1-Prinzip}
\begin{theorem} 
Wenn es eine Folge A gibt, die ein Sortiennetzwerk nicht sortiert, so existiert auch eine 0,1-Folge, die von diesem Netzwerk nicht sortiert wird.
\end{theorem}
\begin{proof}
{\color{red} fill}
\end{proof}
\end{frame}

\begin{frame}{Ansatz}
    man kann jede Zahlenfolge durch eine 0,1 Folge repräsentieren
    $$
    f(c) = \begin{cases} 0 , & if \;\;c < k \\
    1 , & if \;\;c \geq k
    \end{cases}$$
\end{frame}

\begin{frame}{0,1- Beispiel}
    Beispiel an der Tafel ? Bild
\end{frame}

\subsection*{Aufbau eines effektieveren Netzwerks}
%Einsatzorte
\begin{frame}{effektiverer Ansatz}
    \begin{itemize}
        \item Aufgabe
        \item grundlegendes Prinzip
        \item Demonstration (kleines Beispiel)
        \item Laufzeit
    \end{itemize}
\end{frame}

\begin{frame}{effektiver}
    \begin{semiverbatim}
        \uncover<1-> {Aufgabe :
            \begin{itemize}
                \item Resultat soll sortierte Eingabe sein
                \item \alert{soll effizient sein}
            \end{itemize}}
        \uncover<2-> {grundlegendes Prinzip :
            \begin{itemize}
                \item intuitiver Einsatz von Vergleichen
                \item[]\alert{+ Einbezug von Teile und Herrscher}
                % mh sehr leere Folien
            \end{itemize}}
    \end{semiverbatim}
\end{frame}

\begin{frame}{Aufteilung}
    Bild Buch Biton-Sortierer
\end{frame}

\begin{frame}{Biton -Sortierer : Aufbau}
    Bild
    %Erklären anzeichnen an der Tafel
\end{frame}

\begin{frame}{Demonstration}
    Bild kleiner Zahlenfolge 4-8-16\\
    Beispiel
\end{frame}

\section{Laufzeit}
\subsection{Herleitung}
\begin{frame}
\uncover<2-> {$$ 1 $$}
\uncover<1-> {$$ \frac{1}{2}\; \cdot\;\log_2 n \;\; (\log_2 n\;+\;1)$$}
\end{frame}
\begin{frame}{Herleitung}
    Herleitung
\end{frame}
\subsection{Vergleich mit Software sortieren}
    %eventuell unte Vorraussetzungen Mergesort, Quicksort
\begin{frame}
    Unterschiedliche Betrachtungen Schritte gegen Vergleiche, versuch der Darstellung
\end{frame}

\begin{frame}{Bubblesort im Hardwarenetz}
    Bild Bubblesort \\
    siehe 1     
\end{frame}

\begin{frame}{Mergesort im Hardwarenetz}
    Bild Mergesort \\
    siehe 4 
\end{frame}

\begin{frame}
    Bild Quicksort \\
    Bild 5
\end{frame}

\section{Gegenüberstellung}
\begin{frame}
    \begin{itemize}
        \item Geschwindigkeit vs Variabilität
        \begin{itemize}
            \item hohe Geschwindigkeit durch direkte Hardware Implementriegung
            \item starre Struktur , bildet Rahmen der Möglichkeiten
            \item stark typisierte Eingabe
        \end{itemize}
    \item Hardwareaufwand vs Softwareaufwand
        \begin{itemize}
            \item Software zur Auswertung keine zum sortieren
            \item geringe Skalierbarkeit
            \item hoher Aufwand wenn Eingabelimit überschritten wird
            \item nur lokal
            \item Hardware Konzeption eventuell aufwendiger
        \end{itemize}
    \end{itemize}
\end{frame}

\section{Zusammenfassung}
\begin{frame}{Zusammenfassung}
\begin{itemize}
  \item paralleles sortieren ist schnell und effizient 
  \item stark Problemabhängig
  \item … {\color{red} muss noch gefüllt werden}
\end{itemize}
\end{frame}

\section{Ausblick}
\begin{frame}{Ausblick}
weiter
\end{frame}

\subsection{Hybercube}
\begin{frame}{Hyprecube}
?¿
\end{frame}

\begin{frame}{Aufbau}
structur
\end{frame}

\begin{frame}{Funktion}

\end{frame}

%Ende
\begin{frame}{Ende}
    Fragen, Anregungen?\\
    (keine Liederwünsche)
\end{frame}

\subsection{Anhang}
\appendix

\section<presentation>*{\appendixname}
\subsection<presentation>*{For Further Reading}

\begin{frame}[allowframebreaks]
  \frametitle<presentation>{For Further Reading}
    
  \begin{thebibliography}{10}
    
  \beamertemplatebookbibitems
  % Start with overview books.

  \bibitem{}
    A.~Author.
    \newblock {\em Taschenbuch der Algorithmen}.
    \newblock Springer Verlag , 2008.
    
  \bibitem{Author1990}
    Tom Leighton.
    \newblock {\em Einführung in Parallele Algorithmen und Architekturen}{\\Gitter, Bäume und Hypercubes}.
    \newblock Thomsom Publisching , 1997.
 
    
  \beamertemplatearticlebibitems
  % Followed by interesting articles. Keep the list short. 

  \bibitem{0,1-Prinzip}
    S.~Someone.
   % \href{http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/networks/nulleins.htm}
    \newblock 
    \newblock {http://www.iti.fh-flensburg.de/lang/algorithmen/sortieren/networks/nulleins.htm}
    
  \end{thebibliography}
\end{frame}

\end{document}

\begin{frame}{Make Titles Informative. Use Uppercase Letters. Long Titles are Split Automatically.}{Subtitles are optional.}
  % - A title should summarize the slide in an understandable fashion
  %   for anyone how does not follow everything on the slide itself.
  \begin{itemize}
  \item
    Use \texttt{itemize} a lot.
  \item
   	Kurze Sätze benutzen.
  \end{itemize}
\end{frame}

\begin{frame}{Make Titles Informative.}

  You can create overlays\dots
  \begin{itemize}
  \item using the \texttt{pause} command:
    \begin{itemize}
    \item
      First item.
      \pause
    \item    
      Second item.
    \end{itemize}
  \item
    using overlay specifications:
    \begin{itemize}
    \item<3->
      First item.
    \item<4->
      Second item.
    \end{itemize}
  \item
    using the general \texttt{uncover} command:
    \begin{itemize}
      \uncover<5->{\item
        First item.}
      \uncover<6->{\item
        Second item.}
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{An old algorithm}
% NB. listings is quite powerful, but not well suited to be used with beamer
%  consider using semiverbatim or the like, see below
\begin{lstlisting}[language=C]
int main (void)
{
  std::vector<bool> is_prime (100, true);
  for (int i = 2; i < 100; i++)
    if (is_prime[i])
      {
        std::cout << i << " ";
        for (int j = i; j < 100;
            is_prime [j] = false, j+=i);
      }
  return 0;
}
\end{lstlisting}
\end{frame}

\begin{frame}[fragile]
  \frametitle{An Algorithm For Finding Primes Numbers.}
\begin{semiverbatim}
\uncover<1->{\alert<0>{int main (void)}}
\uncover<1->{\alert<0>{\{}}
\uncover<1->{\alert<1>{ \alert<4>{std::}vector<bool> is_prime (100, true);}}
\uncover<1->{\alert<1>{ for (int i = 2; i < 100; i++)}}
\uncover<2->{\alert<2>{    if (is_prime[i])}}
\uncover<2->{\alert<0>{      \{}}
\uncover<3->{\alert<3>{        \alert<4>{std::}cout << i << " ";}}
\uncover<3->{\alert<3>{        for (int j = i; j < 100;}}
\uncover<3->{\alert<3>{             is_prime [j] = false, j+=i);}}
\uncover<2->{\alert<0>{      \}}}
\uncover<1->{\alert<0>{ return 0;}}
\uncover<1->{\alert<0>{\}}}
\end{semiverbatim}
  \visible<4->{Note the use of \alert{\texttt{std::}}.}
\end{frame}



\begin{frame}{Make Titles Informative.}
  \begin{example}
    \begin{itemize}
    \item 2 is prime (two divisors: 1 and 2).
    \item 3 is prime (two divisors: 1 and 3).
    \item 4 is not prime (\alert{three} divisors: 1, 2, and 4).
    \end{itemize}
  \end{example}
\end{frame}

\begin{frame}{Make Titles Informative.}
\begin{theorem}
 There is no largest prime number and, in addition, $$\int_\Omega \nabla u \cdot \nabla v = - \int_\Omega u \Delta v + \int_{\partial\Omega} u v n$$
 \end{theorem}
 \begin{proof}
 \begin{enumerate}
 \item<1-> Suppose $p$ were the largest prime number.
 \item<2-> Let $q$ be the product of the first $p$ numbers.
 \item<3-> Then $q + 1$ is not divisible by any of them.
 \item<1-> Thus $q + 1$ is also prime and greater than $p$.\qedhere
 \end{enumerate} 
 \end{proof}
 \uncover<4->{The proof used \textit{reductio ad absurdum}.}
\end{frame}

\begin{frame}{Make Titles Informative.}
\end{frame}



\begin{frame}{Summary}

  % Keep the summary *very short*.
  \begin{itemize}
  \item
    The \alert{first main message} of your talk in one or two lines.
  \item
    The \alert{second main message} of your talk in one or two lines.
  \item
    Perhaps a \alert{third message}, but not more than that.
  \end{itemize}
  
  % The following outlook is optional.
  \vskip0pt plus.5fill
  \begin{itemize}
  \item
    Outlook
    \begin{itemize}
    \item
      Something you haven't solved.
    \item
      Something else you haven't solved.
    \end{itemize}
  \end{itemize}
\end{frame}
